<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unreal Engine on Martin MeRu</title><link>https://meruman.github.io/tags/unreal-engine/</link><description>Recent content in Unreal Engine on Martin MeRu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Feb 2023 10:58:43 +0100</lastBuildDate><atom:link href="https://meruman.github.io/tags/unreal-engine/index.xml" rel="self" type="application/rss+xml"/><item><title>Adventure land in Unreal engine</title><link>https://meruman.github.io/posts/10.-adventure_land/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/10.-adventure_land/</guid><description>Overview: Adventure land is a first-person 3D video game where the player has to collect hammers to clear the levels while avoiding an enemy that will chase them forever if they get too close. The game features five levels, menus, and professional finishes. I learned various game design notions and implemented them to balance gameplay difficulty. I used Unreal Engine 5 to create the game using a clean and robust use of blueprints.</description></item><item><title>Cliche, the origins in Unreal Engine</title><link>https://meruman.github.io/posts/11.-cliche_the_origins/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/11.-cliche_the_origins/</guid><description>Description: Cliche, The Origins is a 3D action-adventure game developed during a game jam with the theme &amp;ldquo;cliche&amp;rdquo;. The game features a player character on a quest to rescue a princess kidnapped by an evil ghost. The player needs to collect printing stereotypes in each level to print newspapers in the cliche machine and find the princess. The game has 5 levels with enemies, mini bosses, and a big boss on each level.</description></item><item><title>Creating Adventure land</title><link>https://meruman.github.io/posts/10.-adventure_land_blog/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/10.-adventure_land_blog/</guid><description>Description: Key Learnings: Tools and Technologies Used: Outcome: Future Improvements: Description: In this project, I created a population manager in Unity using genetic algorithms to navigate a maze. The project involved setting up a population of bots, breeding them, and evaluating their fitness in order to evolve a population that can successfully navigate a maze.
Key Learnings: Creating a population manager in Unity using genetic algorithms Implementing fitness functions in genetic algorithms Managing data structures using lists in C# Applying good coding practices, such as commenting and using informative variable names Testing and experimenting with different parameters to fine-tune the genetic algorithm and improve the quality of the solutions it generates.</description></item><item><title>Creating Cliche, the origins in Unreal Engine</title><link>https://meruman.github.io/posts/11.-cliche_the_origins_blog/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/11.-cliche_the_origins_blog/</guid><description>Description: Key Learnings: Tools and Technologies Used: Outcome: Future Improvements: Description: In this project, I created a population manager in Unity using genetic algorithms to navigate a maze. The project involved setting up a population of bots, breeding them, and evaluating their fitness in order to evolve a population that can successfully navigate a maze.
Key Learnings: Creating a population manager in Unity using genetic algorithms Implementing fitness functions in genetic algorithms Managing data structures using lists in C# Applying good coding practices, such as commenting and using informative variable names Testing and experimenting with different parameters to fine-tune the genetic algorithm and improve the quality of the solutions it generates.</description></item><item><title>Creating Lost in the forest in Unreal Engine</title><link>https://meruman.github.io/posts/12.-lost_in_the_forest_blog/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/12.-lost_in_the_forest_blog/</guid><description>Description: Key Learnings: Tools and Technologies Used: Outcome: Future Improvements: Description: In this project, I created a population manager in Unity using genetic algorithms to navigate a maze. The project involved setting up a population of bots, breeding them, and evaluating their fitness in order to evolve a population that can successfully navigate a maze.
Key Learnings: Creating a population manager in Unity using genetic algorithms Implementing fitness functions in genetic algorithms Managing data structures using lists in C# Applying good coding practices, such as commenting and using informative variable names Testing and experimenting with different parameters to fine-tune the genetic algorithm and improve the quality of the solutions it generates.</description></item><item><title>Lost in the forest in Unreal Engine</title><link>https://meruman.github.io/posts/12.-lost_in_the_forest/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/12.-lost_in_the_forest/</guid><description>Description: For this project, I developed a Unity Pong game where a human player can play against an artificial pong paddle that is trained with an artificial neural network. The game involves bouncing a ball back and forth between two paddles, and the objective is to score points by getting the ball past the opponent&amp;rsquo;s paddle. The artificial paddle is able to learn and improve its performance over time through the use of a neural network, making it a challenging opponent for players to face.</description></item></channel></rss>