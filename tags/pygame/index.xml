<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pygame on Martin MeRu</title><link>https://meruman.github.io/tags/pygame/</link><description>Recent content in Pygame on Martin MeRu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Feb 2023 10:58:43 +0100</lastBuildDate><atom:link href="https://meruman.github.io/tags/pygame/index.xml" rel="self" type="application/rss+xml"/><item><title>Alien ranger in Pygame with Stable diffusion</title><link>https://meruman.github.io/posts/8.-alien_ranger/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/8.-alien_ranger/</guid><description>Project Overview This project is a simple game called &amp;ldquo;Alien Ranger&amp;rdquo; created using Python and Pygame library. The game features a player catching aliens and aims to achieve high scores. The game&amp;rsquo;s image assets were generated using Stable diffusion, an AI language model that creates images from textual descriptions. Using generated images for game development provides unique graphics that can be customized for the specific game&amp;rsquo;s requirements.
Concept and Design Alien Ranger is a single-player game where the player is tasked with catching aliens of a specific color and shape.</description></item><item><title>Catch the lion in Pygame</title><link>https://meruman.github.io/posts/6.-catch_the_lion/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/6.-catch_the_lion/</guid><description>Description: Catch the Lion is a fun and interactive game created using Python and the Pygame library. The objective of the game is to catch the lion by clicking on it with your mouse. The game is designed to test your reflexes and hand-eye coordination, while providing an entertaining experience.
Key Skills Demonstrated: Game development using Python Pygame library User input handling Audio and music integration Tools and Technologies Used: Python Pygame Git version control Pygbag Visual Studio code editor Details: Developed using Python and the Pygame library, the game boasts an intuitive game development interface.</description></item><item><title>Creating Alien ranger with Stable diffusion</title><link>https://meruman.github.io/posts/8.-alien_ranger_blog/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/8.-alien_ranger_blog/</guid><description>Description: Key Learnings: Tools and Technologies Used: Outcome: Future Improvements: Description: In this project, I created a population manager in Unity using genetic algorithms to navigate a maze. The project involved setting up a population of bots, breeding them, and evaluating their fitness in order to evolve a population that can successfully navigate a maze.
Key Learnings: Creating a population manager in Unity using genetic algorithms Implementing fitness functions in genetic algorithms Managing data structures using lists in C# Applying good coding practices, such as commenting and using informative variable names Testing and experimenting with different parameters to fine-tune the genetic algorithm and improve the quality of the solutions it generates.</description></item><item><title>Creating catch the lion</title><link>https://meruman.github.io/posts/6.-catch_the_lion_blog/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/6.-catch_the_lion_blog/</guid><description>Description: Key Learnings: Tools and Technologies Used: Outcome: Future Improvements: Description: In this project, I created a population manager in Unity using genetic algorithms to navigate a maze. The project involved setting up a population of bots, breeding them, and evaluating their fitness in order to evolve a population that can successfully navigate a maze.
Key Learnings: Creating a population manager in Unity using genetic algorithms Implementing fitness functions in genetic algorithms Managing data structures using lists in C# Applying good coding practices, such as commenting and using informative variable names Testing and experimenting with different parameters to fine-tune the genetic algorithm and improve the quality of the solutions it generates.</description></item><item><title>Creating sea monsters assault</title><link>https://meruman.github.io/posts/7.-sea_monsters_assault_blog/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/7.-sea_monsters_assault_blog/</guid><description>Description: Key Learnings: Tools and Technologies Used: Outcome: Future Improvements: Description: In this project, I created a population manager in Unity using genetic algorithms to navigate a maze. The project involved setting up a population of bots, breeding them, and evaluating their fitness in order to evolve a population that can successfully navigate a maze.
Key Learnings: Creating a population manager in Unity using genetic algorithms Implementing fitness functions in genetic algorithms Managing data structures using lists in C# Applying good coding practices, such as commenting and using informative variable names Testing and experimenting with different parameters to fine-tune the genetic algorithm and improve the quality of the solutions it generates.</description></item><item><title>Sea monsters assault 2D game</title><link>https://meruman.github.io/posts/7.-sea_monsters_assault/</link><pubDate>Wed, 22 Feb 2023 10:58:43 +0100</pubDate><guid>https://meruman.github.io/posts/7.-sea_monsters_assault/</guid><description>Project Overview Name: Sea Monsters Assault
Type: 2D game
Platform: PC
Tools: Python, Pygame, Stable diffusion
Description Sea Monsters Assault is a 2D game where the player defends their beach from waves of sea monsters. The player must shoot down the monsters before they reach the shore, while avoiding their attacks. The game features multiple rounds of increasing difficulty, with new types of monsters. The game&amp;rsquo;s graphics are generated using Stable diffusion, an AI-powered image generation tool.</description></item></channel></rss>